# Simple workflow for deploying static content to GitHub Pages
name: Deploy mkdocs content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
      - name: Setup Python
        uses: actions/setup-python@v4.9.1
        with:
          # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
          # python-version: 3.12
          # File containing the Python version to use. Example: .python-version
          python-version-file: .python-version
          # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv, poetry.
          # cache: # optional
          # The target architecture (x86, x64) of the Python or PyPy interpreter.
          # architecture: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec.
          check-latest: true
          # The token used to authenticate when fetching Python distributions from https://github.com/actions/python-versions. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          token: ${{ github.server_url == 'https://github.com' && github.token || '' }}
          # Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.
          # cache-dependency-path: # optional
          # Set this option if you want the action to update environment variables.
          update-environment: true
          # When 'true', a version range passed to 'python-version' input will match prerelease versions if no GA versions are found. Only 'x.y' version range is supported for CPython.
          allow-prereleases: false
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Cache
        uses: actions/cache@v4.2.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: .cache
          # An explicit key for restoring and saving the cache
          key: mkdocs-material-${{ env.cache_id }}
          # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: mkdocs-material-
          # The chunk size used to split up large files during upload, in bytes
          # upload-chunk-size: # optional
          # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
          # enableCrossOsArchive: # optional, default is false
          # Fail the workflow if cache entry is not found
          # fail-on-cache-miss: # optional, default is false
          # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
          # lookup-only: # optional, default is false
          # Run the post step to save the cache even if another step before fails
          # save-always: # optional, default is false
      - run: pip install mkdocs-material mkdocs-git-revision-date-localized-plugin mkdocs-minify-plugin mkdocs-rss-plugin
      - run: mkdocs gh-deploy --force --remote-branch gh-pages --remote-name origin --site-dir site --config-file mkdocs.yml
